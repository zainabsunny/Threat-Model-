{
  "summary": {
    "title": "TCMG 308 Threat Model",
    "owner": "Zainab Sunny"
  },
  "detail": {
    "contributors": [],
    "diagrams": [
      {
        "title": "TCMG 308 Threat Model Assignment",
        "thumbnail": "./public/content/images/thumbnail.jpg",
        "id": 0,
        "diagramJson": {
          "cells": [
            {
              "type": "tm.Process",
              "size": {
                "width": 100,
                "height": 100
              },
              "position": {
                "x": 79,
                "y": 201
              },
              "angle": 0,
              "id": "bbdc5a3e-dbb2-4bb8-a73a-2b9dd442cda8",
              "z": 1,
              "hasOpenThreats": true,
              "threats": [
                {
                  "status": "Open",
                  "severity": "Medium",
                  "description": "Using weak and un-unique passwords which can lead to unauthorized access. Using weak passwords and account policies that lead to password cracking, identity spoofing, and denial of service attacks if accounts can be locked out deliberately.",
                  "title": "Weak Passwords",
                  "type": "Information disclosure",
                  "mitigation": "1. Multi-Factor Authentication\n2. Create unique and lengthy passwords\n3. Change password every 6 months"
                },
                {
                  "status": "Open",
                  "severity": "High",
                  "description": "The attacker obtains authentication credentials by monitoring the network with the use of network monitoring software.",
                  "title": "Web application user authentication process",
                  "mitigation": "Use SSL to provide an ​encrypted channel",
                  "type": "Information disclosure"
                }
              ],
              "attrs": {
                ".element-shape": {
                  "class": "element-shape hasOpenThreats isInScope"
                },
                "text": {
                  "text": "Client Browser"
                },
                ".element-text": {
                  "class": "element-text hasOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Process",
              "size": {
                "width": 100,
                "height": 100
              },
              "position": {
                "x": 373,
                "y": 282
              },
              "angle": 0,
              "id": "b84e2278-0cf7-46ec-a11d-2f583ef2c2d6",
              "z": 2,
              "hasOpenThreats": true,
              "threats": [
                {
                  "status": "Open",
                  "severity": "High",
                  "description": "Neglecting authentication credentials or authentication cookies over unencrypted network links, which can lead to credential or session attacks.",
                  "title": "Neglecting authentication credentials/cookies",
                  "mitigation": "1. Screen for exposed credentials\n2. leverage adaptive authentication\n3. Track traffic on site",
                  "type": "Spoofing"
                },
                {
                  "status": "Open",
                  "severity": "High",
                  "title": "Security Misconfiguration",
                  "description": "Revealing error handling information to the attackers such as stack traces along with not changing default keys and​ passwords",
                  "mitigation": "1. Create a 'build and deploy' process, which can run a test on deployment​.",
                  "type": "Information disclosure"
                }
              ],
              "attrs": {
                ".element-shape": {
                  "class": "element-shape hasOpenThreats isInScope"
                },
                "text": {
                  "text": "Web Server"
                },
                ".element-text": {
                  "class": "element-text hasOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Store",
              "size": {
                "width": 160,
                "height": 80
              },
              "position": {
                "x": 658,
                "y": 297
              },
              "angle": 0,
              "id": "d6953c88-96c1-49ff-b80f-33a4817e98b6",
              "z": 3,
              "hasOpenThreats": true,
              "threats": [
                {
                  "status": "Open",
                  "severity": "High",
                  "title": "Cross-site scripting SQL injection",
                  "description": "Using poor/weak data validation that leads to cross-site scripting SQL injection from destroying the SQL Database",
                  "mitigation": "1. Sanitize all user-supplied data in order to remove character string that could e executed as SQL commands\n2. Strong data validation by limiting format, length,  and other structures of permissible inputs. \n3. Avoiding unsecured URL parameters\n4. Limiting the scope of SQL Commands\n2. Don't return HTML tags to the​ client.",
                  "type": "Tampering"
                },
                {
                  "status": "Open",
                  "severity": "High",
                  "description": "Using unstable and insecure data access coding techniques, which can increase the threat posed by SQL injection.",
                  "title": "Unstable and insecure data",
                  "type": "Tampering"
                },
                {
                  "status": "Open",
                  "severity": "High",
                  "description": "Injection of SQL commands as the attacker appends SQL commands to user name, which is used to form a SQL query",
                  "title": "Data access component",
                  "mitigation": "Use a regular expression to validate the user name, and use a stored procedure that uses parameters to access the database.",
                  "type": "Spoofing"
                }
              ],
              "attrs": {
                ".element-shape": {
                  "class": "element-shape hasOpenThreats isInScope"
                },
                "text": {
                  "text": "SQL Database"
                },
                ".element-text": {
                  "class": "element-text hasOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "b84e2278-0cf7-46ec-a11d-2f583ef2c2d6"
              },
              "target": {
                "id": "bbdc5a3e-dbb2-4bb8-a73a-2b9dd442cda8"
              },
              "vertices": [
                {
                  "x": 308,
                  "y": 305
                }
              ],
              "id": "54881a55-3bce-4eea-ac73-f020570c3df2",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "HTTP",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 5,
              "hasOpenThreats": true,
              "threats": [
                {
                  "status": "Open",
                  "severity": "High",
                  "title": "Clickjacking",
                  "description": "When an attacker injects transparent or opaque objects into your web application",
                  "type": "Tampering",
                  "mitigation": "X-Frame-Options header"
                },
                {
                  "status": "Open",
                  "severity": "High",
                  "description": "The attacker impersonates an authorized user and makes requests on their behalf, like resetting a password​ or updating an email address.\n\nCross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they’re currently authenticated. With a little help of social engineering (such as sending a link via email or chat), an attacker may trick the users of a web application into executing actions of the attacker’s choosing. If the victim is a normal user, a successful CSRF attack can force the user to perform state-changing requests like transferring funds, changing their email address, and so forth. If the victim is an administrative account, CSRF can compromise the entire web application.",
                  "title": "Cross Site Request Forgery",
                  "type": "Information disclosure",
                  "mitigation": "1. Check if your framework has built-in CSRF protection and use it\n2. Always use SameSite Cookie Attribute for session cookies"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "b84e2278-0cf7-46ec-a11d-2f583ef2c2d6"
              },
              "target": {
                "id": "d6953c88-96c1-49ff-b80f-33a4817e98b6"
              },
              "vertices": [],
              "id": "0945bd3a-cdcd-46ae-9274-92bd9ddf7d60",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "HTTP",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 6,
              "hasOpenThreats": true,
              "threats": [
                {
                  "status": "Open",
                  "severity": "Medium",
                  "mitigation": "Anonymous Authentication should be disabled on all SQL Server Reporting Services instance",
                  "description": "Allowing unauthenticated anonymous access. When Anonymous Authentication is enabled, anyone who connects to the reporting services instance will have access to the reports that are configured to be viewed by the account to which the Anonymous Authentication account is mapped.",
                  "title": "Unauthenticated access",
                  "type": "Tampering"
                },
                {
                  "status": "Open",
                  "severity": "High",
                  "description": "Passing session identifiers or cookies over unencrypted network channels. This can lead to IP session hijacking.",
                  "title": "Session identifiers or cookies",
                  "type": "Information disclosure",
                  "mitigation": "Add Secure Flag"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Boundary",
              "smooth": true,
              "source": {
                "x": 245,
                "y": 356
              },
              "target": {
                "x": 276,
                "y": 211
              },
              "vertices": [
                {
                  "x": 206,
                  "y": 266
                }
              ],
              "id": "fdd10f53-3153-4a2e-af41-fa8c6d0cf205",
              "z": 7,
              "attrs": {}
            },
            {
              "type": "tm.Boundary",
              "smooth": true,
              "source": {
                "x": 607,
                "y": 281
              },
              "target": {
                "x": 608,
                "y": 375
              },
              "vertices": [
                {
                  "x": 611,
                  "y": 392
                }
              ],
              "id": "b657a042-6f81-4f7d-8553-e20ab02de929",
              "z": 8,
              "attrs": {}
            },
            {
              "type": "tm.Boundary",
              "smooth": true,
              "source": {
                "x": 635,
                "y": 255
              },
              "target": {
                "x": 843,
                "y": 253
              },
              "vertices": [],
              "id": "6347f21b-767a-41fd-b74e-d863be8e128a",
              "z": 9,
              "attrs": {}
            },
            {
              "type": "tm.Boundary",
              "smooth": true,
              "source": {
                "x": 643,
                "y": 394
              },
              "target": {
                "x": 640,
                "y": 255
              },
              "vertices": [],
              "id": "246f467e-ad92-4058-985f-bac6d2e4b9f3",
              "z": 10,
              "attrs": {}
            },
            {
              "type": "tm.Boundary",
              "smooth": true,
              "source": {
                "x": 842,
                "y": 395
              },
              "target": {
                "x": 641,
                "y": 397
              },
              "vertices": [],
              "id": "57d2a226-bc82-472a-9e9f-42e7ef598a22",
              "z": 11,
              "attrs": {}
            },
            {
              "type": "tm.Boundary",
              "smooth": true,
              "source": {
                "x": 844,
                "y": 393
              },
              "target": {
                "x": 840,
                "y": 254
              },
              "vertices": [],
              "id": "f8862566-40bb-46b8-95b6-73b8e2ec8002",
              "z": 12,
              "attrs": {}
            }
          ]
        },
        "size": {
          "height": 590,
          "width": 2943.44921875
        }
      }
    ]
  }
}